-- Criação da tabela Cidades
CREATE TABLE Cidades (
    CidadeID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nome VARCHAR2(100) NOT NULL,
    Estado VARCHAR2(50),
    Pais VARCHAR2(100) NOT NULL,
    PRIMARY KEY (CidadeID),
    CONSTRAINT uc_Cidades_Nome UNIQUE (Nome, Estado, Pais)
);

-- Criação da tabela Aeroportos
CREATE TABLE Aeroportos (
    AeroportoID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nome VARCHAR2(100) NOT NULL,
    Sigla VARCHAR2(10) NOT NULL,
    CidadeID NUMBER NOT NULL,
    PRIMARY KEY (AeroportoID),
    CONSTRAINT fk_Aeroportos_Cidades FOREIGN KEY (CidadeID) REFERENCES Cidades(CidadeID),
    CONSTRAINT uc_Aeroportos_Sigla UNIQUE (Sigla),
    CONSTRAINT uc_Aeroportos_Nome UNIQUE (Nome, CidadeID)
);

-- Criação da tabela Aeronaves
CREATE TABLE Aeronaves (
    AeronaveID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Modelo VARCHAR2(100) NOT NULL,
    NumeroIdentificacao VARCHAR2(100) NOT NULL UNIQUE,
    Fabricante VARCHAR2(100) NOT NULL,
    AnoFabricacao NUMBER NOT NULL,
    QtdLinhas NUMBER NOT NULL,
    QtdColunas NUMBER NOT NULL,
    PRIMARY KEY (AeronaveID)
);


-- Criação da tabela Trechos
CREATE TABLE Trechos (
    TrechoID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    OrigemID NUMBER NOT NULL,
    DestinoID NUMBER NOT NULL,
    PRIMARY KEY (TrechoID),
    CONSTRAINT fk_Trechos_Origem FOREIGN KEY (OrigemID) REFERENCES Aeroportos(AeroportoID),
    CONSTRAINT fk_Trechos_Destino FOREIGN KEY (DestinoID) REFERENCES Aeroportos(AeroportoID)
);

-- Criação da tabela Voos
CREATE TABLE Voos (
    VooID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    AeronaveID NUMBER NOT NULL,
    TrechoID NUMBER NOT NULL,
    DataHoraPartida DATE NOT NULL,
    DataHoraChegada DATE NOT NULL,
    ValorAssento NUMBER NOT NULL,
    PRIMARY KEY (VooID),
    CONSTRAINT fk_Voos_Aeronaves FOREIGN KEY (AeronaveID) REFERENCES Aeronaves(AeronaveID),
    CONSTRAINT fk_Voos_Trechos FOREIGN KEY (TrechoID) REFERENCES Trechos(TrechoID)
);

-- Criação da tabela Assentos
CREATE TABLE Assentos (
    AssentoID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    AeronaveID NUMBER NOT NULL,
    CodigoAssento VARCHAR2(5) NOT NULL,
    Linha NUMBER NOT NULL,
    Coluna NUMBER NOT NULL,
    PRIMARY KEY (AssentoID),
    CONSTRAINT fk_Assentos_Aeronaves FOREIGN KEY (AeronaveID) REFERENCES Aeronaves(AeronaveID) ON DELETE CASCADE,
    CONSTRAINT uc_Assentos_Posicao UNIQUE (AeronaveID, Linha, Coluna)
);


-- Criação da tabela Clientes
CREATE TABLE Clientes (
    ClienteID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nome VARCHAR2(100) NOT NULL,
    Email VARCHAR2(100) NOT NULL UNIQUE,
    PRIMARY KEY (ClienteID)
);

-- Criação da tabela Reservas;
CREATE TABLE Reservas (
    ReservaID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    VooID NUMBER NOT NULL,
    ClienteID NUMBER NOT NULL,
    AssentoID NUMBER NOT NULL,
    Status VARCHAR2(50) NOT NULL,
    PRIMARY KEY (ReservaID),
    CONSTRAINT fk_Reservas_Voos FOREIGN KEY (VooID) REFERENCES Voos(VooID),
    CONSTRAINT fk_Reservas_Clientes FOREIGN KEY (ClienteID) REFERENCES Clientes(ClienteID),
    CONSTRAINT fk_Reservas_Assentos FOREIGN KEY (AssentoID) REFERENCES Assentos(AssentoID)
);

CREATE OR REPLACE TRIGGER CreateSeatsAfterAeronaveInsert
AFTER INSERT ON Aeronaves
FOR EACH ROW
BEGIN
    FOR i IN 1..:NEW.QtdLinhas LOOP
        FOR j IN 1..:NEW.QtdColunas LOOP
            INSERT INTO Assentos (AeronaveID, CodigoAssento, Linha, Coluna)
            VALUES (:NEW.AeronaveID, CHR(64 + i) || TO_CHAR(j), i, j);
        END LOOP;
    END LOOP;
END;




